{"version":3,"sources":["styles/GlobalStyles.js","assets/maxresdefault.jpg","pages/Login/styles.js","pages/Login/index.jsx","pages/Register/styles.js","pages/Register/index.jsx","components/CardPokeComponent/styles.js","utils/SetTypeColor.js","utils/SetTypeImage.js","components/CardPokeComponent/index.jsx","pages/Home/styles.js","pages/Home/index.jsx","components/ClassComponent.js","pages/ClassReactTest.js","App.js","index.js"],"names":["createGlobalStyle","Container","styled","div","img","Painel","ContainerCenter","ContainerInput","ContainerPassword","ContainerInfo","Titulo","h1","Input","input","RegisterButton","button","Info","CheckboxButton","CheckboxInput","H2Message","h2","props","color","Login","validator","require","useHistory","useState","email","setEmail","setPassword","colorTextEmail","setColorTextEmail","textEmail","setTextEmail","useEffect","isEmail","placeholder","type","onChange","e","target","value","id","onClick","idPassword","document","getElementById","check","checked","localStorage","setItem","location","reload","ContainerName","largura","Register","name","setName","password","confirmPassword","setConfirmPassword","colorTextPassword","setColorTextPassword","textStrong","setTextStrong","colorTextName","setColorTextName","textName","setTextName","history","strongPassword","isStrongPassword","returnScore","length","test","idConfirmPassword","push","cardBackgroundColor","NumberPoke","IdPoke","display","BackgroundTypeColor","TextNumberPoke","h3","StatusBar","height","TitlePokemon","TitlePoke","transition","mtop","ImgPokemon","ImgPoke","width","left","TypePokemonDiv","TypeDiv","TypePokemon","TypeNamePokemon","TypeImgPokemon","LogoPoke","DivArrowUp","ButtonArrowUp","ButtonArrow","transform","InfoPokeDiv","InfoPoke","InfoPokeName","InfoPokeValue","InfoPokeLine","SetTypeColor","SetTypeImage","CardPokeComponent","state","CardClick","StatusBarHeight","TableInfo","TableTitleOne","TableTitleTwo","TableTitleThree","TableInfoOne","experience","TableInfoTwo","parseFloat","TableInfoThree","weight","statusPoke","console","log","setState","hp","attack","defense","this","types","IdcardBackgroundColor","id_Poke","src","imgpokemon","alt","namePokemon","map","val","react","Component","Home","allPokemons","dataPokemons","a","axios","get","data","pokemons","promisseMap","pokemon_species","pokemon","res","Promise","all","sort","b","teste","style","flexWrap","justifyContent","background","species","sprites","other","front_default","base_experience","stats","base_stat","ClassComponent","ClassReactTest","message","clgTeste","App","getItem","path","exact","component","to","GlobalStyles","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6a19e0c.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        text-decoration: none;\r\n    }\r\n    #root {\r\n        height: 100vh;\r\n    }\r\n    \r\n    ul, li{\r\n        list-style: none\r\n    }\r\n    body{\r\n        background-color: #EDEDED;\r\n    }\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n\r\n    \r\n    :root {\r\n\r\n    --button-login-Register: #623D63;\r\n    --button-login-Register-hover: #621233;\r\n    --login-Register-shadow: #623d63; \r\n    --border-bottom-login: #9e9e9e;\r\n    --login-text-info: #E1E1E1;\r\n    --button-text-login: #E1E1E1;\r\n    --login-focus-shadow: #623d63;\r\n\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/maxresdefault.f9aadb48.jpg\";","import styled from 'styled-components';\r\nimport img from '../../assets/maxresdefault.jpg'\r\n\r\nexport const Container = styled.div`\r\n    background: url(${img});\r\n    background-position: center;\r\n\tbackground-size: cover;\r\n\tbackground-repeat: no-repeat;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: end;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Painel = styled.div`\r\n    background: white;\r\n    height: 80vh;\r\n    width: 60vh;\r\n    border-radius: 16px;\r\n    margin-left: 100px;\r\n    margin-right: 100px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    box-shadow: 0 0 50px  var(--login-Register-shadow);\r\n\r\n`\r\n\r\nexport const ContainerCenter = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 40vh;\r\n    margin-left: 11vh;\r\n    margin-right: 11vh;\r\n    //aqui\r\n`\r\n\r\nexport const ContainerInput = styled.div`\r\n\r\n`\r\nexport const ContainerPassword = styled.div`\r\n    width: 100%;\r\n`\r\nexport const ContainerInfo = styled.div`\r\n    height: 100px;\r\n    \r\n`\r\nexport const Titulo = styled.h1`\r\n    text-align: center;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    margin-top: 40px;\r\n\tborder: 0;\r\n\tborder-bottom: 2px solid var(--border-bottom-login);\r\n\toutline: none;\r\n\twidth: 100%;\r\n\r\n    :focus {\r\n\tborder-bottom: 2px solid var(--login-focus-shadow);\r\n    \r\n    }\r\n`\r\n\r\nexport const RegisterButton = styled.button`\r\n    width: 100%;\r\n    height: 5vh;\r\n    background: var(--button-login-Register);\r\n    border-radius: 10px;\r\n    border: none;\r\n    color: var(--button-text-login);\r\n    font-weight: bold;\r\n    \r\n    box-shadow: 0 7px 15px  var(--login-Register-shadow);\r\n\r\n    :hover{\r\n        background: var(--button-login-Register-hover);\r\n    }\r\n\r\n`\r\nexport const Info = styled.div`\r\n    width: 100%;\r\n    height: 40px;\r\n    background: var(--login-text-info);\r\n    border-radius: 0 0 16px 16px;\r\n`\r\n\r\nexport const CheckboxButton = styled.button`\r\n height: 25px;\r\n text-align: center;\r\n font-size: 14px;\r\n background: none;\r\n border: none;\r\n`\r\nexport const CheckboxInput = styled.input`\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n    width: 13px;\r\n    height: 13px;\r\n`\r\n\r\nexport const H2Message = styled.h2`\r\nfont-size: 15px;\r\n    color: ${props => props.color};\r\n`\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { Container, Painel, Input,ContainerCenter, ContainerInput, Titulo,ContainerPassword, ContainerName, RegisterButton, Info, ContainerInfo, CheckboxButton,CheckboxInput ,H2Message } from './styles'\r\n\r\nexport default function Login() {\r\n    var validator = require('validator');\r\n    const history = useHistory()\r\n  \r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const [colorTextPassword, setColorTextPassword] = useState('')\r\n    const [textStrong, setTextStrong] = useState('')\r\n\r\n    const [colorTextEmail, setColorTextEmail] = useState('')\r\n    const [textEmail, setTextEmail] = useState('')\r\n\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(email === \"\"){\r\n            return setTextEmail('')\r\n        }\r\n       var validEmail = validator.isEmail(email)\r\n        if(validEmail === true){\r\n            setColorTextEmail('#3AB600')\r\n            setTextEmail('Valid email')\r\n        }else{\r\n            setColorTextEmail('#e62e2e')\r\n            setTextEmail('Invalid email')\r\n        }\r\n    },[email, validator])\r\n\r\n    \r\n\r\n    function showPassword() {\r\n        var idPassword = document.getElementById('password')\r\n        var check = document.getElementById('mostrar')\r\n        if (idPassword.type === \"password\") {\r\n            check.checked = true\r\n            idPassword.type = \"text\"\r\n        } else {\r\n            idPassword.type = \"password\"\r\n            check.checked = false\r\n        }\r\n    }\r\n\r\n    function LoginUser(){\r\n        localStorage.setItem('token', \"True\")\r\n        document.location.reload(true)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n           \r\n           <Painel>\r\n            <Titulo></Titulo>\r\n            <Titulo>Login</Titulo>\r\n               <ContainerCenter>\r\n               <ContainerInput>\r\n                   <ContainerPassword>\r\n                   <Input placeholder=\"Email\" type=\"text\"  onChange={(e)=>{\r\n                            setEmail(e.target.value)\r\n                        }}></Input>\r\n                    <Input placeholder=\"Password\" id=\"password\" type=\"password\" onChange={(e)=>{\r\n                            setPassword(e.target.value)\r\n                        }}></Input>\r\n                    </ContainerPassword>\r\n                    <CheckboxButton onClick={showPassword}><CheckboxInput id='mostrar' value='pass' type='checkbox' ></CheckboxInput>Show password</CheckboxButton>\r\n               </ContainerInput>\r\n              \r\n               <ContainerInfo>\r\n                    <H2Message color={colorTextEmail}>{textEmail}</H2Message>\r\n               </ContainerInfo>\r\n               <RegisterButton onClick={LoginUser}>Login</RegisterButton>\r\n               </ContainerCenter>\r\n               <Info></Info>\r\n           </Painel>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport img from '../../assets/maxresdefault.jpg'\r\n\r\nexport const Container = styled.div`\r\n    background: url(${img});\r\n    background-position: center;\r\n\tbackground-size: cover;\r\n\tbackground-repeat: no-repeat;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: end;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Painel = styled.div`\r\n    background: white;\r\n    height: 80vh;\r\n    width: 60vh;\r\n    border-radius: 16px;\r\n    margin-left: 100px;\r\n    margin-right: 100px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    box-shadow: 0 0 50px  var(--login-Register-shadow);\r\n\r\n`\r\n\r\nexport const ContainerCenter = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 40vh;\r\n    margin-left: 11vh;\r\n    margin-right: 11vh;\r\n    //aqui\r\n`\r\n\r\nexport const ContainerInput = styled.div`\r\n\r\n`\r\nexport const ContainerName = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nexport const ContainerPassword = styled.div`\r\n\r\n`\r\nexport const ContainerInfo = styled.div`\r\n    height: 100px;\r\n    \r\n`\r\nexport const Titulo = styled.h1`\r\n    text-align: center;\r\n    font-size: 2.5vh;\r\n    font-weight: bold;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    margin-top: 40px;\r\n\tborder: 0;\r\n\tborder-bottom: 2px solid var(--border-bottom-login);\r\n\toutline: none;\r\n\twidth: ${props => props.largura};\r\n\r\n    :focus {\r\n\tborder-bottom: 2px solid var(--login-focus-shadow);\r\n    \r\n    }\r\n`\r\n\r\nexport const RegisterButton = styled.button`\r\n    width: 100%;\r\n    height: 5vh;\r\n    background: var(--button-login-Register);\r\n    border-radius: 10px;\r\n    border: none;\r\n    color: var(--button-text-login);\r\n    font-weight: bold;\r\n    \r\n    box-shadow: 0 7px 15px  var(--login-Register-shadow);\r\n\r\n    :hover{\r\n        background: var(--button-login-Register-hover);\r\n    }\r\n\r\n`\r\nexport const Info = styled.div`\r\n    width: 100%;\r\n    height: 40px;\r\n    background: var(--login-text-info);\r\n    border-radius: 0 0 16px 16px;\r\n`\r\n\r\nexport const CheckboxButton = styled.button`\r\n    height: 25px;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background: none;\r\n    border: none;\r\n`\r\nexport const CheckboxInput = styled.input`\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n    width: 13px;\r\n    height: 13px;\r\n`\r\n\r\nexport const H2Message = styled.h2`\r\n    font-size: 15px;\r\n    color: ${props => props.color};\r\n`\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { Container, Painel, Input,ContainerCenter, ContainerInput, Titulo,ContainerPassword, ContainerName, RegisterButton, Info, ContainerInfo, CheckboxButton,CheckboxInput ,H2Message } from './styles'\r\nimport { useHistory } from 'react-router';\r\nexport default function Register() {\r\n    var validator = require('validator');\r\n  \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    \r\n    const [colorTextPassword, setColorTextPassword] = useState('')\r\n    const [textStrong, setTextStrong] = useState('')\r\n\r\n    const [colorTextEmail, setColorTextEmail] = useState('')\r\n    const [textEmail, setTextEmail] = useState('')\r\n\r\n    const [colorTextName, setColorTextName] = useState('')\r\n    const [textName, setTextName] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(password === \"\" || confirmPassword === \"\"){\r\n            return setTextStrong('')\r\n        }\r\n\r\n        var strongPassword = validator.isStrongPassword(password, {returnScore: true})\r\n        if(password === confirmPassword){\r\n            if(password.length < 8){\r\n                setColorTextPassword('#e62e2e')\r\n                return setTextStrong('Be at least 8 characters long')\r\n            } else if(strongPassword > \"46\" && password.length >= 8){\r\n                setColorTextPassword('#3AB600')\r\n                setTextStrong('Your password is strong')\r\n            }else{\r\n                setColorTextPassword('#e4d61b')\r\n                setTextStrong('Your password is weak')\r\n            }\r\n        }else{\r\n            setColorTextPassword('#e62e2e')\r\n            return setTextStrong('Passwords do not match')\r\n        }\r\n    },[confirmPassword, password , validator])\r\n\r\n    useEffect(()=>{\r\n        if(email === \"\"){\r\n            return setTextEmail('')\r\n        }\r\n       var validEmail = validator.isEmail(email)\r\n        if(validEmail === true){\r\n            setColorTextEmail('#3AB600')\r\n            setTextEmail('Valid email')\r\n        }else{\r\n            setColorTextEmail('#e62e2e')\r\n            setTextEmail('Invalid email')\r\n        }\r\n    },[email, validator])\r\n\r\n    useEffect(()=>{\r\n\r\n        let validName = /^[a-záàâãéèêíïóôõöúçñ ]+$/;\r\n\r\n        if(name === \"\" ){\r\n            return setTextName('')\r\n        }else if(name.length < 3){\r\n            setColorTextName('#e62e2e')\r\n            return setTextName('Small name')\r\n        } else if(validName.test(name)){\r\n            setColorTextName('#3AB600')\r\n            setTextName('Valid name')\r\n        }else{\r\n            setColorTextName('#e62e2e')\r\n            setTextName('Invalid name')\r\n        }\r\n    },[name])\r\n\r\n    \r\n\r\n    function showPassword() {\r\n        var idPassword = document.getElementById('password')\r\n        var idConfirmPassword = document.getElementById('confirmPassword')\r\n        var check = document.getElementById('mostrar')\r\n        if (idPassword.type === \"password\") {\r\n            check.checked = true\r\n            idPassword.type = \"text\"\r\n            idConfirmPassword.type = \"text\"\r\n        } else {\r\n            idPassword.type = \"password\"\r\n            idConfirmPassword.type = \"password\"\r\n            check.checked = false\r\n        }\r\n    }\r\n\r\n    function registerUser(){\r\n        history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n           \r\n           <Painel>\r\n            <Titulo></Titulo>\r\n            <Titulo>Here, you can create an account on this website</Titulo>\r\n               <ContainerCenter>\r\n               <ContainerInput>\r\n                   <ContainerName>\r\n                        <Input placeholder=\"Name\" largura={40 + \"%\"} onChange={(e)=>{\r\n                            setName(e.target.value)\r\n                        }}></Input>\r\n                        <Input placeholder=\"Phone\" largura={40 + \"%\"}></Input>\r\n                   </ContainerName>\r\n                   <ContainerPassword>\r\n                   <Input placeholder=\"Email\" type=\"text\" largura={100 + \"%\"} onChange={(e)=>{\r\n                            setEmail(e.target.value)\r\n                        }}></Input>\r\n                    <Input placeholder=\"Password\" id=\"password\" type=\"password\" largura={100 + \"%\"} onChange={(e)=>{\r\n                            setPassword(e.target.value)\r\n                        }}></Input>\r\n                    <Input placeholder=\"Confirm password\" id=\"confirmPassword\" type=\"password\" largura={100 + \"%\"} onChange={(e)=>{\r\n                            setConfirmPassword(e.target.value)\r\n                        }}></Input>\r\n                    </ContainerPassword>\r\n                    <CheckboxButton onClick={showPassword}><CheckboxInput id='mostrar' value='pass' type='checkbox' ></CheckboxInput>Show password</CheckboxButton>\r\n               </ContainerInput>\r\n              \r\n               <ContainerInfo>\r\n                    <H2Message color={colorTextPassword}>{textStrong}</H2Message>\r\n                    <H2Message color={colorTextEmail}>{textEmail}</H2Message>\r\n                    <H2Message color={colorTextName}>{textName}</H2Message>\r\n               </ContainerInfo>\r\n               <RegisterButton onClick={registerUser}>Register</RegisterButton>\r\n               </ContainerCenter>\r\n               <Info></Info>\r\n           </Painel>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    background-color:  ${props => props.cardBackgroundColor};\r\n    height: 350px;\r\n    width: 220px;\r\n    border-radius: 16px;\r\n    position: relative;\r\n    margin: 20px 10px 0 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    box-shadow: 1px 1px 4px  #00000070;\r\n    &:hover{\r\n        outline:1px solid #00000050;\r\n    }\r\n  //background: url('../assets/simbolpoke.webp'); #C233A5\r\n\r\n`\r\nexport const NumberPoke = styled.div`\r\n    display: ${props => props.IdPoke.display};\r\n    margin-top: 10px;\r\n    height: 25px;\r\n    width: 60px;\r\n    background: ${props => props.BackgroundTypeColor};\r\n    border-radius: 16px;\r\n    text-align: center;\r\n    position: absolute;\r\n    z-index: 10;\r\n    transition: display 2s ;\r\n    box-shadow: 0.5px 0.5px 3px #333;\r\n    \r\n` \r\nexport const TextNumberPoke = styled.h3`\r\n    margin-top: 3px;\r\n` \r\n\r\nexport const StatusBar = styled.div`\r\n    height: ${props => props.height};\r\n    width: 210px;\r\n    background: #ffffff76;\r\n    border-radius: 16px;\r\n    margin: 0 5px 5px 5px;\r\n    transition: 0.5s linear ;\r\n\r\n    z-index: 1;\r\n   \r\n`\r\nexport const TitlePokemon = styled.h2`\r\n    transition: ${props => props.TitlePoke.transition} ;\r\n    text-align: center;\r\n    width: 100%;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    font-family: 'Orienta', sans-serif;\r\n    text-transform: capitalize;\r\n    margin-top: ${props => props.TitlePoke.mtop};\r\n`\r\nexport const ImgPokemon = styled.img`\r\n    height: ${props => props.ImgPoke.height};\r\n    width: ${props => props.ImgPoke.width};\r\n    z-index: 1;\r\n    position: absolute;\r\n    bottom: 170px;\r\n    transition: 0.5s linear;\r\n    left: ${props => props.ImgPoke.left};\r\n`\r\nexport const TypePokemonDiv = styled.div`\r\n    display: ${props => props.TypeDiv};\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nexport const TypePokemon = styled.div`\r\n    height: 35px;\r\n    width: 90px;\r\n    border-radius: 2px;\r\n    background-color: ${props => props.BackgroundTypeColor};\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 5px;    \r\n`\r\n\r\nexport const TypeNamePokemon = styled.h2`\r\n    margin: auto;\r\n    text-align: center;\r\n    width: 60%;  \r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    font-family: 'Orienta', sans-serif;\r\n    text-transform: capitalize;\r\n`\r\nexport const TypeImgPokemon = styled.img`\r\n\r\n    padding: 5px;\r\n    width: 40%;\r\n    height: 100%;\r\n`\r\n\r\n\r\nexport const LogoPoke = styled.div`\r\n    height: 200px;\r\n    width: 200px;\r\n    background: url('../simbolpoke.webp');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    position: absolute;\r\n    opacity: 0.3;\r\n    top: 20px;\r\n    left: 10px;\r\n    z-index: 0;\r\n`\r\nexport const DivArrowUp = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: end;\r\n`\r\nexport const ButtonArrowUp = styled.button`\r\n    height: 25px;\r\n    width: 25px;\r\n    margin: 6px 6px 0 0;\r\n    background: url('../ArrowUP.png');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    border: none;\r\n    transform: ${props => props.ButtonArrow.transform};\r\n    \r\n`\r\nexport const InfoPokeDiv = styled.div`\r\n    width: 100%;\r\n    padding: 0 10px 0 10px;\r\n    margin-top: 20px;\r\n`\r\nexport const InfoPoke = styled.div`\r\n display: flex;\r\n flex-direction: row;\r\n justify-content: space-between;\r\n align-items: center;\r\n`\r\n\r\nexport const InfoPokeName = styled.h2`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    font-family: 'Orienta', sans-serif;\r\n    text-transform: capitalize;\r\n`\r\nexport const InfoPokeValue = styled.h2`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    font-family: 'Orienta', sans-serif;\r\n\r\n`\r\nexport const InfoPokeLine = styled.div`\r\n    border-bottom: solid 1px #00000025;\r\n\r\n`\r\n\r\n\r\n\r\n;\r\n","export function SetTypeColor(type) {\r\n    switch (type) {\r\n      case 'normal':\r\n        return '#A8A77A'\r\n      case 'fire':\r\n        return '#EF8F49'\r\n      case 'water':\r\n        return '#70BAFF'\r\n      case 'electric':\r\n        return '#DEE217'\r\n      case 'grass':\r\n        return '#65DA52'\r\n      case 'ice':\r\n        return '#4EEDE3'\r\n      case 'fighting':\r\n        return '#D74C47'\r\n      case 'poison':\r\n        return '#DA52BE'\r\n      case 'ground':\r\n        return '#E2BF65'\r\n      case 'flying':\r\n        return '#A98FF3'\r\n      case 'psychic':\r\n        return '#F95587'\r\n      case 'rock':\r\n        return '#B6A136'\r\n      case 'bug':\r\n        return '#A6B91A'\r\n      case 'ghost':\r\n        return '#735797'\r\n      case 'dragon':\r\n        return '#8F61FF'\r\n      case 'dark':\r\n        return '#705746'\r\n      case 'steel':\r\n        return '#B7B7CE'\r\n      case 'fairy':\r\n        return '#EE7AAB'\r\n      default:\r\n        return '#000000'\r\n    }\r\n  }","export function SetTypeImage(type) {\r\n    switch (type) {\r\n      case 'normal':\r\n        return './IconType/normal.png'\r\n      case 'fire':\r\n        return './IconType/fire.png'\r\n      case 'water':\r\n        return './IconType/water.png'\r\n      case 'electric':\r\n        return './IconType/electric.png'\r\n      case 'grass':\r\n        return './IconType/grass.png'\r\n      case 'ice':\r\n        return './IconType/ice.png'\r\n      case 'fighting':\r\n        return './IconType/fighting.png'\r\n      case 'poison':\r\n        return './IconType/poison.png'\r\n      case 'ground':\r\n        return './IconType/ground.png'\r\n      case 'flying':\r\n        return './IconType/flying.png'\r\n      case 'psychic':\r\n        return './IconType/psychic.png'\r\n      case 'rock':\r\n        return './IconType/rock.png'\r\n      case 'bug':\r\n        return './IconType/bug.png'\r\n      case 'ghost':\r\n        return './IconType/ghost.png'\r\n      case 'dragon':\r\n        return './IconType/dragon.png'\r\n      case 'dark':\r\n        return './IconType/dark.png'\r\n      case 'steel':\r\n        return './IconType/steel.png'\r\n      case 'fairy':\r\n        return './IconType/fairy.png'\r\n      default:\r\n        return './ArrowUP.png'\r\n    }\r\n  }","import react from \"react\";\r\nimport { Container, LogoPoke,DivArrowUp, StatusBar,InfoPoke, InfoPokeLine, ButtonArrowUp, InfoPokeName, InfoPokeValue, InfoPokeDiv, NumberPoke, TitlePokemon, TextNumberPoke, ImgPokemon, TypePokemon, TypePokemonDiv, TypeNamePokemon,TypeImgPokemon } from './styles'\r\nimport { SetTypeColor } from \"../../utils/SetTypeColor\";\r\nimport { SetTypeImage } from \"../../utils/SetTypeImage\";\r\nclass CardPokeComponent extends react.Component {\r\n\r\n    state = { \r\n        CardClick: false, \r\n        StatusBarHeight: \"55%\",\r\n        ImgPoke: { \r\n            height: \"100px\",\r\n            width: \"100px\",\r\n            left: \"60px\",\r\n        },\r\n\r\n        TableInfo: { \r\n            TableTitleOne: \"Experience\",\r\n            TableTitleTwo: \"Height\",\r\n            TableTitleThree: \"width\",\r\n            TableInfoOne: `${this.props.experience}`,\r\n            TableInfoTwo: `${(parseFloat(this.props.height)/10)}m`,\r\n            TableInfoThree: `${(parseFloat(this.props.weight)/10)}kg`,\r\n        },\r\n        TypeDiv: \"flex\", \r\n        TitlePoke: { \r\n            mtop: \"0px\", \r\n            transition: \"0.5s linear\"\r\n        },\r\n        ButtonArrow: { \r\n            transform: \"rotate(0deg)\", \r\n        },\r\n        IdPoke: { \r\n            display: \"inline\", \r\n        },\r\n    \r\n    };\r\n\r\n\r\n    statusPoke = () =>{\r\n        console.log(this.state.TitlePoke.mtop)\r\n        if(this.state.CardClick === false){\r\n            this.setState({\r\n                CardClick: true, \r\n                StatusBarHeight: \"97.5%\",\r\n                ImgPoke: { \r\n                    height: \"150px\",\r\n                    width: \"150px\",\r\n                    left: \"35px\",\r\n                },\r\n                TableInfo: { \r\n                    TableTitleOne: \"HP\",\r\n                    TableTitleTwo: \"Attack\",\r\n                    TableTitleThree: \"Defense\",\r\n                    TableInfoOne: `${this.props.hp}`,\r\n                    TableInfoTwo: `${this.props.attack}`,\r\n                    TableInfoThree: `${this.props.defense}`,\r\n                },\r\n                TypeDiv: \"none\",\r\n                TitlePoke: { \r\n                    mtop: \"190px\", \r\n                    transition: \"0.5s linear\"\r\n                },\r\n                ButtonArrow: { \r\n                    transform: \"rotate(180deg)\", \r\n                },\r\n                IdPoke: { \r\n                    display: \"none\", \r\n                },\r\n            })\r\n        }\r\n        \r\n        if(this.state.CardClick === true){\r\n            this.setState({\r\n                CardClick: false, \r\n                StatusBarHeight: \"55%\",\r\n                ImgPoke: { \r\n                    height: \"100px\",\r\n                    width: \"100px\",\r\n                    left: \"60px\",\r\n                },\r\n\r\n                TableInfo: { \r\n                    TableTitleOne: \"Experience\",\r\n                    TableTitleTwo: \"Height\",\r\n                    TableTitleThree: \"width\",\r\n                    TableInfoOne: `${this.props.experience}`,\r\n                    TableInfoTwo: `${this.props.height}`,\r\n                    TableInfoThree: `${this.props.weight}`,\r\n                },\r\n                TypeDiv: \"flex\",\r\n                TitlePoke: { \r\n                    mtop: \"0px\", \r\n                    transition: \"none\",\r\n                },\r\n                ButtonArrow: { \r\n                    transform: \"rotate(0deg)\", \r\n                },\r\n                IdPoke: { \r\n                    display: \"inline\", \r\n                },\r\n            })\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    render(){\r\n        \r\n    const cardBackgroundColor = `${SetTypeColor(this.props.types[0].type.name)}90`;\r\n    const IdcardBackgroundColor = `${SetTypeColor(this.props.types[0].type.name)}80`;\r\n        \r\n    //style={{marginRight: spacing + 'em'}}\r\n    //style={{background: '#ffffff76'}} onMouseOut={this.cardEfectOut}\r\n        return(\r\n            <>\r\n                <Container cardBackgroundColor={cardBackgroundColor} >\r\n                    <LogoPoke>\r\n                    \r\n                    </LogoPoke>\r\n                    <NumberPoke BackgroundTypeColor={IdcardBackgroundColor} IdPoke={this.state.IdPoke} >\r\n                        <TextNumberPoke>#{this.props.id_Poke}</TextNumberPoke>\r\n                    </NumberPoke>\r\n                    <div></div>\r\n                    <StatusBar height={this.state.StatusBarHeight}>\r\n                        <ImgPokemon ImgPoke={this.state.ImgPoke} src={this.props.imgpokemon} alt=\"imgPokemon\"></ImgPokemon>\r\n                        \r\n                            <DivArrowUp>\r\n                                <ButtonArrowUp ButtonArrow={this.state.ButtonArrow} onClick={this.statusPoke}></ButtonArrowUp>\r\n                            </DivArrowUp>\r\n                            <TitlePokemon TitlePoke={this.state.TitlePoke}>{this.props.namePokemon}</TitlePokemon>\r\n                            <TypePokemonDiv TypeDiv={this.state.TypeDiv} >    \r\n                            \r\n                            {this.props.types.map((val)=>{\r\n                                return(\r\n                                    <div key={val.type.name}>\r\n                                        <TypePokemon BackgroundTypeColor={SetTypeColor(val.type.name)} >\r\n                                            <TypeNamePokemon >{val.type.name}</TypeNamePokemon>\r\n                                            <TypeImgPokemon  src={SetTypeImage(val.type.name)} alt=\"imgPokemon\"></TypeImgPokemon>\r\n                                        </TypePokemon>\r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n                            }\r\n                            </TypePokemonDiv>\r\n                            <InfoPokeDiv >\r\n                                <InfoPoke>\r\n                                    <InfoPokeName>{this.state.TableInfo.TableTitleOne}:</InfoPokeName>\r\n                                    <InfoPokeValue>{this.state.TableInfo.TableInfoOne}</InfoPokeValue>\r\n                                    \r\n                                </InfoPoke>\r\n                                <InfoPokeLine></InfoPokeLine>\r\n                                <InfoPoke>\r\n                                    <InfoPokeName>{this.state.TableInfo.TableTitleTwo}:</InfoPokeName>\r\n                                    <InfoPokeValue>{this.state.TableInfo.TableInfoTwo}</InfoPokeValue>\r\n                                </InfoPoke>\r\n                                <InfoPokeLine></InfoPokeLine>\r\n                                <InfoPoke>\r\n                                    <InfoPokeName>{this.state.TableInfo.TableTitleThree}:</InfoPokeName>\r\n                                    <InfoPokeValue>{this.state.TableInfo.TableInfoThree}</InfoPokeValue>\r\n                                </InfoPoke>\r\n\r\n                            </InfoPokeDiv>\r\n\r\n                    </StatusBar>                    \r\n                </Container>\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardPokeComponent","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  \r\n`;\r\n","import react, { useEffect } from \"react\";\r\nimport CardPokeComponent from \"../../components/CardPokeComponent\"\r\nimport { Container } from './styles'\r\nimport axios from \"axios\";\r\n\r\nclass Home extends react.Component{\r\n\r\n    state = { allPokemons: [] };\r\n\r\n    dataPokemons = async () => {\r\n        const { data } = await axios.get('https://pokeapi.co/api/v2/generation/1')\r\n        let pokemons = [];\r\n\r\n        const promisseMap = data.pokemon_species.map(async pokemon => {\r\n            const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\r\n            pokemons.push(res.data);\r\n        });\r\n        await Promise.all(promisseMap);\r\n\r\n        this.setState({allPokemons: pokemons.sort(function (a,b) {\r\n            if (a.id > b.id) {\r\n              return 1\r\n            }\r\n            if (a.id < b.id) {\r\n              return -1\r\n            }\r\n            return 0\r\n          })})    \r\n    }\r\n\r\n    componentWillMount(){\r\n        this.dataPokemons()\r\n    }\r\n\r\n\r\n    teste = () => {\r\n        console.log(this.state.allPokemons)\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <button onClick={this.teste}>ASDASDA</button>\r\n            <Container>\r\n                <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent:\"space-around\", background: \"#ebebeb\"}}>\r\n                { this.state.allPokemons.map((val)=>{\r\n                    return(\r\n                        <div key={val.id}>\r\n                            <CardPokeComponent \r\n                            id_Poke={val.id}\r\n                            namePokemon={val.species.name} \r\n                            imgpokemon={val.sprites.other[\"official-artwork\"].front_default}\r\n                            types={val.types}\r\n                            experience={val.base_experience}\r\n                            height={val.height}\r\n                            weight={val.weight}\r\n                            hp={val.stats[0].base_stat}\r\n                            attack={val.stats[1].base_stat}\r\n                            defense={val.stats[2].base_stat}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n                }\r\n                </div>\r\n            </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import { Component } from \"react\";\r\n\r\n\r\nclass ClassComponent extends Component{\r\n    render(){\r\n        return(\r\n            <button>\r\n                {this.props.name}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassComponent","\r\nimport React, { Component }  from \"react\";\r\nimport ClassComponent from \"../components/ClassComponent\";\r\n\r\nclass ClassReactTest extends Component{\r\n\r\n        state = {\r\n            message: 'Aprendendo State',\r\n            teste: 'teste'\r\n        }\r\n\r\n        componentWillMount(){\r\n\r\n        }\r\n        \r\n    clgTeste =() => {\r\n        this.setState({\r\n            message: 'Mudei'\r\n        })\r\n        console.log('teste')\r\n    }\r\n    \r\n    render(){\r\n   \r\n        return(\r\n            <>\r\n                <h1>{this.state.message}</h1>\r\n                <button onClick={this.clgTeste}> asd </button>\r\n                <ClassComponent name=\"btn1\" />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassReactTest","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport GlobalStyles from \"./styles/GlobalStyles\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Home from \"./pages/Home\";\r\nimport ClassReactTest from \"./pages/ClassReactTest\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    localStorage.getItem('token') ?\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home}/>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>    \r\n        </Switch>\r\n        <GlobalStyles />\r\n    </Router>\r\n    : \r\n    <Router>\r\n        <Switch>\r\n        <Route path=\"/teste\" exact component={ClassReactTest}/>\r\n          <Route path=\"/register\" exact component={Register}/>\r\n          <Route path=\"/\" exact component={Login}/>   \r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n        <GlobalStyles />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}